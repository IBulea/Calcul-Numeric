Algorithms for Lagrange Interpolation

1)
[xi;f] = f(x) oth order divided difference
[x0,x1,x2,...,xk-1,xk;f] = ([x1,...,xk;f]-[x0,...,xk-1;f])/(xk-x0)
[x0,x1,...,xm;f] = leading coefficient of (Lmf)(x; x0,x1, .. , xm)
	where x -> evaluation point
	      x0,x1, .. , xm -> nodes	


[xi,xj; f] = (f(xj)-f(xi))/(xj-xi) = ([xj; f] - [xi; f])/(xj - xi)

Pb1:
Input : Given x0,...,,xm  fi=f(xi), i=0,...,m compute de divided differences (DDs) [x0,x1,...,xk; f]
Output: DDs table



--------|-----------------------------------------------------------
   x0	|[x0; f] [x0,x1; f] [x0,x1,x2; f] .... [x0,x1,x2,...xm; f]
   x1	|[x1; f] [x1,x2; f]
   x2	|[x2; f]
   .	|.
   .	|.
   .	|.
   xm-1	|[xm-1; f] [xm-1,xm; f]
   xm	|[xm; f]
	|
	|


--------|---------------
   0	|0  1   3   1
   1	|1  7   6
   2	|8  19
   3	|27
 

In Matlab diff(v) = [v(2)-v(1),v(3)-v(2),....,v(n)-v(n-1)]

Newton Polynomial:
(Lmf)(x) = Sum(k=0,m) (x-x0)...(x-xk-1)[x0,x1,...xm; f] = (Nmf)(x)

For our example:
(Lmf)(x) = (N3f)(x) = [0;f] + (x-0)[0,1; f] + (x-0)(x-1)[0,1,2; f]  + (x-0)(x-1)(x-2)[0,1,2,3; f] =
	= 0 + x + x(x-1)*3 + x(x-1)(x-2)*1


Table  generation: theta(m^2)

To compute tk = (x-x0)...(x-xk-1) = tk-1(x-xk-1)

evaluation at x
	theta(m)
total
 	theta(m^2) 


Metoda Baricentrica

(Lmf) = Sum(k=0,m) lx(x)f(xk)
fk=f(xk)
v(x) = (x-x0)(x-x1)...(x-xm) = Product(k=0,m)(x-xk)
Wk=1/(Product(j=0,j!=k,m)(xk-xj))
lk(x) = wk * u(x)/(x-xk)

Homework:
Implemetn the baricentric method;
1)compute the baricentric weights
2)apply the in code